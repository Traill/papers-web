{"id":"95","paper":{"title":{"text":"Coded and Uncoded Representations in Human Perception"},"authors":[{"name":"Vivek Goyal"}],"abstr":{"text":"Whether conversing in a noisy room, savoring an exotic dish or looking out for fast movement in a dark alley, the ability to sense the external world is critical to our happiness and survival. Psychophysical experiments suggest that perception is often logarithmically related to stimulus intensity. We formulate a Bayesian framework where psychophysical scales arise as optimizations under cognitive limitation and expected relative error (ERE) fidelity. We consider models where latency and storage are the limiting resources and, using analyses related to high-resolution quantization theory, find that the logarithmic relationship appears naturally. We demonstrate the validity of our model for natural sound data sets and discuss implications of this work in psychophysics and source coding."},"body":{"text":"Query search is an important functionality for many network applications. Searching for a destination node whose location is unknown is a prime example frequently encountered by ad hoc network routing protocols and services, e.g., [1], [2]. Other examples include the search for certain data of interest in an environmental monitoring sensor network [4], and more broadly, the search for a shared ﬁle in a peer-to-peer (P2P) network. A good search mechanism should have a short response time and should incur minimal cost.\nThere are a variety of mechanisms one may use to conduct search. These include maintaining a centralized directory service, or by sending out a query packet that traverses the network in a certain way [4]. In this paper we focus on two types of search schemes, both within the class of ﬂooding search. The ﬁrst is the conventional controlled ﬂooding (CF) [6], [7]. Under this scheme the node originating the search (also referred to as the source node) sends out (broadcasts) a query packet that carries an integer TTL (time-to-live)\nvalue. If the search target is found at a neighboring node (or at anytime during the search process), it will reply to the source. Otherwise it decrements the TTL value by one and rebroadcasts the query packet. This continues until the TTL reaches zero. If the target is not found in this search area, the source node will eventually time out and initiate another round of search covering a bigger area using a larger TTL value, and presumably setting a larger timeout value for that round of search. This process continues until either the object is found or the source gives up. Hence the performance of a search strategy both in terms of cost and delay is determined by the sequence of TTL values used. Controlled ﬂooding search has previously been studied in [7], [8], [6], [9]. In particular, in [9] we derived optimal CF strategies that minimize a worst- case search cost measure, and in [10] we further considered the search delay involved in CF strategies.\nThe second type of ﬂooding is referred to as suppressed ﬂooding (SF) , also using TTL values. Similar to CF, initially the source node sends out a query packet that is propagated through the network. The difference is that when the TTL is decremented to zero at some node, that node will freeze or suspend the search rather than discarding the query packet. Such a frozen node then waits for a suppression message from the source to formally terminate the search process; otherwise it times out and resumes the search with a new TTL value. The source only sends out the suppression message if it has received a reply from the target. Note that under SF, timeouts occur at the frozen nodes rather than the source node (as in CF). These timeout values must be set high enough to ensure that a possible suppression message will reach them before the next round of search begins. Thus it is possible that using SF could incur a high delay. On the other hand, SF may have lower cost than CF, because under CF query packets must propagate from the source at the start of search round, whereas under SF the query packets only have to propagate from the previous round\u2019s frozen nodes to the new set of frozen nodes for the current round.\nThe primary goal of this study is to compare controlled and suppressed ﬂooding strategies in terms of the search cost and the search delay. Speciﬁcally, we will formulate a constrained optimization problem by minimizing a cost measure subject to a delay constraint. The rest of the paper is organized as follows. In Section II we present the model and relevant assumptions. Section III gives the formulation and main results, as well as a discussion. Section IV concludes the paper.\nWe will limit our analysis to the case of searching for a single target, which is assumed to exist in the network. For the rest of our discussion we will use the term object to indicate the target of a search, be it a node, a piece of data or a ﬁle. We measure the position of an object by its distance to the source initiating the search, measured in hops. We will use the term object location to indicate the minimum TTL value needed to locate the object, denoted by X. The term network dimension refers to the minimum TTL required to reach every node in the network, denoted by L. Also, ¯ F X (u) = P (X > u) denotes the tail distribution of the random variable X.\nWe will assume that when the source times out, a TTL value of u will have reached all nodes within u hops of the source and will ﬁnd the object with probability 1 if it is located within u hops. This assumption implies that (1) the query propagation process is reliable and that (2) the timeout values are set perfectly, such that a timeout event is equivalent to not ﬁnding the object in the u-hop neighborhood. This assumption is a simpliﬁcation if the network is lossy. In addition, random delay experienced in the network may cause timer to expire prematurely. It nevertheless allows us to reveal some very interesting fundamental features of the problem and obtain valuable insights.\n1 , u 2 , · · · , u N ] of certain length N. It can be either ﬁxed/deterministic or random. For a ﬁxed strategy we assume that u is an increasing sequence. For randomized strategies, we assume all realiza- tions are increasing sequences. Note that in a speciﬁc search experiment we may not need to use the entire sequence; the search stops whenever the object is found.\nFor an SF scheme, the search strategy is uniquely deﬁned by the distance of the frozen nodes from the source. It can be similarly described by a sequence u: in the ﬁrst round the query reaches all nodes within u 1 hops of the source. Nodes that are exactly u 1 hops away from the source freeze at the end of this round. If the object is not found, then a timeout will occur at these frozen nodes. They then begin a new round of search by propagating the query to all nodes that are u 2 hops away from the source (and thus u 2 − u 1 hops away from these frozen nodes). We will also refer to an SF strategy u as a TTL sequence, and refer to element u k as the kth TTL value, because this is the TTL value used by the source node on the kth round if it sends out a suppression message. Note the frozen nodes set the TTL to u k − u k −1 for the kth round. It can be seen that using the same TTL sequence for both CF and SF will successively search the same regions, although the underlying methods are quite different.\nIn practice, for both schemes it is natural to only consider integer-valued (discrete) policies. However, considering real- valued sequences proves to be helpful in deriving optimal\ninteger-valued strategies. For this reason we will also consider continuous (real-valued) strategies, denoted by v, where v = [v 1 , v 2 , · · · , v N ] , and v i is either ﬁxed or a continuous random variable. When considering discrete strategies, TTL values are integers and the object location X is assumed to be a positive integer taking values between 1 and L. In analyzing continuous strategies, X is assumed to be a real number in the interval [1, L] .\nA strategy is admissible if it locates any object of ﬁ- nite location with probability 1. For a ﬁxed strategy this implies u N = L . For a random strategy, this implies P r (u i = L for some 1 ≤ i ≤ N ) = 1 . In the asymptotic case as L → ∞, a strategy u is admissible if ∀ x ≥ 1, P r (u n ≥ x for some n ∈ Z + ) = 1 , implying that u is an inﬁnite-length vector in the asymptotic case. We let U and V\ndenote the set of all real-valued and integer-valued admissible strategies (random and ﬁxed), respectively.\nFor both CF and SF, we will let C(u) denote the cost of sending the query from the source to all nodes within u hops of the source. The functional form of this cost will depend on the properties of the network as well as the underlying broadcast techniques used. Similarly, C s (u) denotes the cost of sending the suppression message to all nodes within u hops of the source. This cost may be smaller than C(u) if the suppression message is in the form of a much smaller signaling packet.\nNote that in general, a node receiving the search query will be unaware whether the object is found at another node in the same round. Thus this node will continue the process by decrementing the TTL value. Therefore the query search cost for each round is determined by the TTL value and not by whether the object is located in that round. Similarly, a suppression message will propagate till the TTL reaches 0, thus its cost is also completely determined by the TTL value.\nFor CF, we denote by D t (u) the source timeout value used when searching with TTL u. This is the delay incurred when the object is not found using u, i.e., when u < X. On the other hand, if u ≥ X, then the delay incurred in this case is the amount of time it takes for the query to propagate X hops and for the reply to reach back to the source. We will denote this delay by D r (X) for object location X. Thus the search delay of using TTL value u under CF can be written as: I (u < X)D t (u) + I(X ≤ u)D r (X) , where I is the indicator function: I(A) = 1 if A is true and 0 otherwise.\nFor SF, we let d t (u, ˜ u ) denote the amount of time it takes for the query to travel from nodes at distance u from the source to nodes that are at distance ˜u. We let u = 0 indicate the source. Similarly, d r (u, 0) denotes the amount of time it takes for the reply message to travel from a node at distance u back to the source. Thus the delay D r (.) deﬁned earlier can be written as D r (u) = d t (0, u) + d r (u, 0) .\nIn the kth round of SF, if u k −1 < X ≤ u k then the query travels from frozen nodes to the target, which sends back a reply to the source. This takes a total time of d t (u k −1 , X ) + d r (X, 0) . Otherwise, X > u k and a timeout occurs at the\nfrozen nodes. Note that if we assume that the suppression mes- sage travels at the same speed as the query, then the timeout at the frozen nodes should be set to D t (u k ) , the same as that set by the source node under CF. The time it takes for the query to reach these frozen nodes plus the timeout associated with the suppression message is thus equal to d t (u k −1 , u k ) + D t (u k ) . For the rest of our analysis we will assume that the suppression message travels at the same speed as the query packet, and that d t (u k −1 , u k ) = d t (0, u k ) − d t (0, u k −1 ) .\nFor real-valued sequences, we require that the above cost and delay functions be deﬁned for all v ∈ [1, ∞), while for integer-valued sequences we only require that these functions be deﬁned for positive integers. When the cost function is invertible, we write C −1 (·) to denote its inverse. We denote by C the class of cost functions C : [1, ∞) → [C(1), ∞), that are increasing, differentiable, and have the property\nlim v →∞ C (v) = ∞ . Finally, let C 1 denote the set of cost functions C(·) ∈ C such that lim x →∞ C (x+1) C (x) = 1 . Note that this subset contains all polynomial cost functions.\nWe will consider the search performance in the asymptotic regime as L → ∞. This is because it is difﬁcult if at all possible to obtain a general strategy that is optimal for all ﬁnite-dimension networks as the optimal TTL sequence often depends on the speciﬁc value of L. In this sense, an asymptotically optimal strategy may provide much more insight into the intrinsic structure of the problem.\nwhen the object location is X. This quantity can be calculated as follows:\nwhere u 0 = 0 . We will drop the subscript when it is clear which variable the expectation is taken with respect to. Similarly, let H u X denote the expected search cost of using SF strategy u when the object location is X. This can be calculated as follows:\n(3) Let D u X denote the expected search delay induced by CF\nIn this study we adopt a worst-case performance measure. Speciﬁcally we can measure the performance of a CF strategy\n(4) where {p X (x)} denotes the set of all probability distributions for X such that E[C(X)] < ∞, and E[C(X)] denotes the expected cost of an omniscient observer. The worst-case cost ratio of an SF strategy is similarly deﬁned.\nSimilarly, the worst-case delay ratio of a CF strategy u is given by:\n(5) where we note in this case {p X (x)} is the set of all location distributions such that E[D r (X)] < ∞ . Again the worst-case delay ratio for SF is similarly deﬁned.\nWith the above cost and delay measures, we formulate the constrained optimization problem as follows. Consider the set of CF strategies:\n(6) for some constant d > 1. This is the set of all strategies whose delay is always within a factor d of the delay of the omniscient observer, regardless of X. We will call d the delay constraint . Note that as d → ∞, the delay constraint becomes less restrictive and the set U d approaches U.\nWe seek a CF strategy that satisﬁes this delay constraint d and has the smallest worst-case cost ratio:\n(7) This constitutes our constrained optimization problem (P). Note that the two supremums in (P), one in the objective\nfunction and the other in the constraint (6), are in general not achieved under the same distribution p X (x) . A similar optimization problem can be formulated for SF strategies in a straightforward manner.\nThe above deﬁnitions also hold analogously for continuous strategies. We will thus denote ρ v , τ v and V d as the continuous versions of (4), (5), (6), respectively.\nWe have shown [10] that for problem (P), there is no loss in generality in assuming that D t (·) = D r (·) . We thus let D (u) = D t (u) = D r (u) for all u. It follows that using a TTL value u for object location X will incur a delay of D (min {X, u}) . We will also use the same notation D u X to denote the expected delay for both CF and SF strategies u, since they are the same. This implies that we can use the same notation U d and V d to describe the same classes of CF and SF strategies.\n(·)] denote a jointly deﬁned sequence v = [v 1 , v 2 , ... ] generated as follows:\n(J.1) The ﬁrst TTL value v 1 is a continuous random variable taking values in the interval 1, C −1 (r · C(1)) , with its cdf given by some nondecreasing, right-continuous function F v 1 (x) = P r(v 1 ≤ x) . Note that this means F v 1 (1) = 0 and F v 1 C −1 (r · C(1)) = 1 .\n(J.2) The k-th TTL value v k is deﬁned by v k = C −1 r k −1 C (v 1 ) for all positive integers k.\nWe see that that given the selection of v 1 , the cost of successive TTL values essentially form a geometric sequence of base r.\nOur main theorems regarding the class of continuous CF and SF strategies are as follows.\nTheorem 1: When C(·) ∈ C and C(·) = βD(·) m for some m, β > 0 , we have:\n. \t (8) Moreover, this minimum worst-case ratio is achieved by using the CF strategy v[r, 1 ln r ln C (·) C (1) ] with r = e m d −1 .\n(9) Moreover, this minimum worst-case ratio is achieved by using the strategy v[r, 1 ln r ln C (·) C (1) ] with r = e.\nTheorem 2: When C(·) ∈ C, C(·) = βD(·) m for some m, β > 0 , and C s (·) = αC(·) for some α > 0, we have for any ﬁxed d > 1,\n− 1 . (10) This minimum worst-case ratio is achieved by using the SF strategy v[r, 1 ln r ln C (·) C (1) ] with r = e m d −1 .\nNote the optimal strategies of Theorems 1 and 2 can be adjusted for different delay constraints by varying the parameter r. For discrete strategies we have the following.\nTheorem 3: When C(·) ∈ C and C(·) = βD(·) m for some m, β > 0 , we have:\n. \t (11) (2) For d ≥ m + 1,\nTheorem 4: When C(·) ∈ C, C(·) = βD(·) m for some m, β > 0 , and C s (·) = αC(·) for some α > 0, we have for any ﬁxed d > 1:\n− 1 . (13) Whether the upper bounds in Theorems 3 and 4 become\nequalities appears to depend on the speciﬁc cost function C(·). By restricting our attention to cost functions C(·) ∈ C 1 , the inequalities in the previous two theorems can be achieved via discrete strategies u ∗ = v ∗ , by taking the ﬂoor (operated on each element of the vector) of the corresponding optimal continuous strategies for CF and SF, respectively.\nThe differentiation between the two cases, 1 < d < m + 1 vs. d ≥ m + 1, in all Theorems 1 and 3 is due to the fact that the optimization problem (P) for CF has an active/binding constraint in the former, and an inactive/non-binding constraint in the latter.\nThe main results rely on the relationship C(·) = βD(·) m for some m, β > 0, where the factor m describes the relative rate at which the cost and delay functions grow with respect\nto TTL. First note that the constant positive factor β cancels out in the cost or delay ratio calculated in (4) and (5). Hence we can assume β = 1 without loss of generality. Secondly, the relationship C(·) = D(·) m holds, for example, in a very representative case of searching in a 2-dimensional network with search cost proportional to the number of transmissions incurred. In this case C(v) is well approximated by a quadratic function (see e.g., [7], [8]) and D(v) can be chosen to be a linear function of v (implying m = 2), or quadratic (implying m = 1 ).\nFinally, the condition C s (·) = αC(·) , for α > 0, describes the cost of sending the suppression message relative to that of sending the query. In general, α < 1 is desired, indicating sending the suppression message is cheaper (e.g., smaller packet size).\nFigure 1 depicts the minimum cost ratio for the CF and SF schemes when C s (·) = C(·) = βD(·) (so α = m = 1). Note that for large d, the suppressed ﬂooding scheme performs better. This is because if delay is not a factor, then the minimum cost strategy is to increase TTL by the smallest possible increment after every round. Such a strategy incurs high delay as the frozen nodes must wait for possible suppres- sion message, but only a minimal cost is committed for every round. Thus for larger delay tolerance, the suppressed ﬂooding scheme performs better because more low-cost strategies are admissible. On the other hand, when d is small then the opposite is true. Since waiting for the suppression message can incur a high delay, under a more stringent delay requirement it is harder for SF to achieve low-cost.\nFigure 2 depicts the trade-off between optimal worst-case cost ratio under CF as given by Theorem 1 and the delay constraint d when C(·) = βD(·) m . The dotted portion of each curve indicates when the delay constraint becomes non- binding, i.e., for d ≥ m + 1 = 1.5, 2, 3, respectively. In\nthese cases the optimal unconstrained strategy (using r = e) has a minimum worst-case cost ratio of e. Note that the plot is logarithmic. As d approaches 1 from above, the best worst-case cost ratio approaches ∞ for all m. Hence, as the constraint on delay becomes tighter, the minimum worst-case cost increases unboundedly.\nIn this paper we studied the cost and delay performance of a type of TTL-based controlled ﬂooding search methods. In particular, we analyzed and compared two such methods, the controlled ﬂooding (CF) and the suppressed ﬂooding (SF). We presented a constrained optimization framework in order to derive strategies that minimize a worst-case search cost measure subject to a worst-case search delay constraint. We derived the solution to this problem under each method and illustrated the inherent cost-delay trade-offs. These results also highlight the conditions under which one search method is preferred over the other."},"refs":[{"authors":[{"name":"D. Johnson"},{"name":"D. Maltz"},{"name":"J. Xie"},{"name":"R. Talpade"},{"name":"T. McAuley"},{"name":"M. Liu"}],"title":{"text":"Dynamic source routing in ad hoc wireless networks,\u201d Mobile Computing, pp. 153\u2013181, 1999. [2] J. Xie, R. Talpade, T. McAuley, and M. Liu, \u201cAMRoute: Ad Hoc Multicast Routing Protocol"}},{"authors":[{"name":"C. Carter"},{"name":"S. Yi"},{"name":"P. Ratanchandani"},{"name":"R. Kravets."}],"title":{"text":"Manycast: Exploring the space between anycast and multicast in ad hoc networks"}},{"authors":[{"name":"Z. Cheng"},{"name":"W. Heinzelman"}],"title":{"text":"Flooding strategy for target discovery in wireless networks"}},{"authors":[{"name":"Y. Baryshinikov"},{"name":"E. Coffman"},{"name":"P. Jelenkovic"},{"name":"P. Momcilovic"},{"name":"D. Rubenstein"}],"title":{"text":"Flood search under the california split rule"}},{"authors":[{"name":"N. Chang"},{"name":"M. Liu"}],"title":{"text":"Revisiting the ttl-based controlled ﬂooding search: Optimality and randomization"}},{"authors":[{"name":"M. Liu"}],"title":{"text":"Optimal controlled ﬂooding search in a large wireless network,\u201d Third International Symposium on Modeling and Optimization in Mobile, Ad Hoc, and Wireless Networks (WiOpt\u201905) , pp. 229\u2013237, April 2005, Riva Del Garda, Italy. [10] N.Chang and M.Liu, \u201cControlled ﬂooding search with delay constraints"}},{"authors":[{"name":"N. Chang"},{"name":"M. Liu"}],"title":{"text":"Controlled ﬂooding search with delay con- straints"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/ita2013/95"},"links":[{"id":"205","weight":5},{"id":"2760","weight":8},{"id":"3180","weight":2},{"id":"67","weight":3},{"id":"1606","weight":4},{"id":"153","weight":8},{"id":"3037","weight":9},{"id":"93","weight":3},{"id":"3191","weight":2},{"id":"12","weight":2},{"id":"1547","weight":2},{"id":"2254","weight":5},{"id":"1278","weight":6},{"id":"2287","weight":6},{"id":"3200","weight":3},{"id":"3008","weight":2},{"id":"3083","weight":4},{"id":"3010","weight":4},{"id":"3222","weight":8},{"id":"2291","weight":3},{"id":"307","weight":5},{"id":"1430","weight":6},{"id":"3021","weight":5},{"id":"170","weight":5},{"id":"3199","weight":5},{"id":"813","weight":2},{"id":"3069","weight":8},{"id":"2634","weight":5},{"id":"2442","weight":3},{"id":"3183","weight":4},{"id":"362","weight":2},{"id":"2763","weight":3},{"id":"2534","weight":4},{"id":"1235","weight":6},{"id":"135","weight":4},{"id":"404","weight":4},{"id":"702","weight":8},{"id":"450","weight":3},{"id":"770","weight":5},{"id":"3165","weight":3},{"id":"1082","weight":2},{"id":"3182","weight":3},{"id":"1889","weight":2},{"id":"762","weight":2},{"id":"3154","weight":7},{"id":"2002","weight":5},{"id":"3065","weight":9},{"id":"3195","weight":5},{"id":"284","weight":3},{"id":"1060","weight":7},{"id":"3132","weight":6},{"id":"3187","weight":5},{"id":"475","weight":5},{"id":"3137","weight":6},{"id":"3059","weight":5},{"id":"2646","weight":3},{"id":"236","weight":2},{"id":"33","weight":4},{"id":"273","weight":4},{"id":"3111","weight":6},{"id":"1442","weight":10},{"id":"2745","weight":4},{"id":"2276","weight":8},{"id":"2352","weight":6},{"id":"3176","weight":4},{"id":"470","weight":2},{"id":"1643","weight":6},{"id":"250","weight":2},{"id":"163","weight":3},{"id":"26","weight":2},{"id":"2455","weight":8},{"id":"1298","weight":2},{"id":"3201","weight":6},{"id":"2830","weight":7},{"id":"679","weight":3},{"id":"3135","weight":6},{"id":"123","weight":5},{"id":"3049","weight":9},{"id":"1215","weight":4},{"id":"1223","weight":2},{"id":"107","weight":4},{"id":"1473","weight":3},{"id":"1462","weight":5},{"id":"1996","weight":8},{"id":"325","weight":3},{"id":"1458","weight":8},{"id":"973","weight":6},{"id":"1279","weight":3},{"id":"1436","weight":4},{"id":"459","weight":4},{"id":"155","weight":5},{"id":"1877","weight":6},{"id":"1559","weight":4},{"id":"3186","weight":4},{"id":"3072","weight":2},{"id":"1121","weight":4},{"id":"3164","weight":8},{"id":"2697","weight":8},{"id":"398","weight":4},{"id":"152","weight":5},{"id":"2750","weight":4},{"id":"3105","weight":10},{"id":"2178","weight":5},{"id":"1866","weight":9},{"id":"3233","weight":10},{"id":"2488","weight":8},{"id":"900","weight":6},{"id":"59","weight":3},{"id":"353","weight":9},{"id":"1846","weight":6},{"id":"1074","weight":6},{"id":"1081","weight":3},{"id":"3168","weight":8},{"id":"263","weight":3},{"id":"1136","weight":2},{"id":"1103","weight":5},{"id":"3157","weight":3},{"id":"3127","weight":19},{"id":"572","weight":3},{"id":"419","weight":19},{"id":"372","weight":7},{"id":"138","weight":4},{"id":"3073","weight":3},{"id":"1660","weight":2},{"id":"408","weight":9},{"id":"3005","weight":6},{"id":"1696","weight":4},{"id":"1212","weight":4},{"id":"487","weight":6},{"id":"508","weight":3},{"id":"1096","weight":6},{"id":"71","weight":2},{"id":"642","weight":3},{"id":"3196","weight":2},{"id":"2033","weight":2},{"id":"1830","weight":4},{"id":"108","weight":2},{"id":"202","weight":4},{"id":"691","weight":7},{"id":"2740","weight":3},{"id":"1443","weight":3},{"id":"3202","weight":2},{"id":"2812","weight":6},{"id":"3243","weight":4},{"id":"2188","weight":3},{"id":"1365","weight":3},{"id":"445","weight":7},{"id":"3185","weight":4},{"id":"1671","weight":4},{"id":"1325","weight":6},{"id":"1844","weight":6},{"id":"219","weight":8},{"id":"428","weight":3},{"id":"2174","weight":9},{"id":"3001","weight":4},{"id":"2759","weight":7},{"id":"1128","weight":2},{"id":"431","weight":2},{"id":"676","weight":5},{"id":"82","weight":2},{"id":"1448","weight":9},{"id":"2996","weight":3},{"id":"2617","weight":3},{"id":"2435","weight":3},{"id":"3174","weight":3},{"id":"3051","weight":5},{"id":"1840","weight":7},{"id":"1988","weight":2},{"id":"1908","weight":3},{"id":"2884","weight":8},{"id":"771","weight":4},{"id":"3088","weight":4},{"id":"221","weight":2},{"id":"25","weight":4},{"id":"658","weight":2},{"id":"2743","weight":3},{"id":"687","weight":4},{"id":"230","weight":3},{"id":"3123","weight":4},{"id":"309","weight":4},{"id":"2773","weight":2},{"id":"31","weight":3},{"id":"3071","weight":8},{"id":"3163","weight":6},{"id":"1439","weight":6},{"id":"278","weight":2},{"id":"764","weight":2},{"id":"3113","weight":2},{"id":"1444","weight":2},{"id":"151","weight":2},{"id":"1438","weight":3},{"id":"184","weight":8},{"id":"264","weight":5},{"id":"257","weight":7},{"id":"3030","weight":4},{"id":"694","weight":8},{"id":"1573","weight":4},{"id":"1847","weight":4},{"id":"3205","weight":6},{"id":"75","weight":5},{"id":"1822","weight":5},{"id":"275","weight":5},{"id":"723","weight":4},{"id":"308","weight":7},{"id":"2838","weight":3},{"id":"3197","weight":3},{"id":"293","weight":4},{"id":"630","weight":6},{"id":"767","weight":5},{"id":"354","weight":4},{"id":"326","weight":5},{"id":"2939","weight":4},{"id":"1076","weight":3},{"id":"430","weight":3},{"id":"1915","weight":6},{"id":"1233","weight":2},{"id":"641","weight":2},{"id":"1905","weight":7},{"id":"3189","weight":9},{"id":"831","weight":3},{"id":"2862","weight":7},{"id":"402","weight":2},{"id":"371","weight":4},{"id":"1084","weight":11},{"id":"2729","weight":2},{"id":"423","weight":3},{"id":"2316","weight":5},{"id":"3156","weight":3},{"id":"1883","weight":2},{"id":"3074","weight":5},{"id":"1055","weight":4},{"id":"1102","weight":5},{"id":"2173","weight":10},{"id":"2753","weight":3},{"id":"1517","weight":2},{"id":"198","weight":4},{"id":"1319","weight":5},{"id":"699","weight":5},{"id":"506","weight":2},{"id":"187","weight":5},{"id":"165","weight":9},{"id":"2255","weight":3},{"id":"92","weight":5},{"id":"1528","weight":3},{"id":"705","weight":6},{"id":"3070","weight":4},{"id":"1503","weight":8},{"id":"438","weight":2},{"id":"1546","weight":4},{"id":"3198","weight":11},{"id":"2778","weight":7},{"id":"1098","weight":4},{"id":"183","weight":2},{"id":"688","weight":3},{"id":"3129","weight":8},{"id":"3169","weight":3},{"id":"359","weight":7},{"id":"3173","weight":5},{"id":"288","weight":11},{"id":"1553","weight":6},{"id":"3184","weight":3},{"id":"3044","weight":7},{"id":"3170","weight":4},{"id":"485","weight":3},{"id":"2738","weight":8},{"id":"240","weight":5},{"id":"1166","weight":9},{"id":"1550","weight":7},{"id":"211","weight":4},{"id":"3125","weight":3},{"id":"2495","weight":6},{"id":"323","weight":2},{"id":"3136","weight":9},{"id":"1456","weight":3},{"id":"243","weight":3},{"id":"1231","weight":2},{"id":"1214","weight":3},{"id":"1083","weight":2},{"id":"3114","weight":2},{"id":"1434","weight":3},{"id":"1871","weight":4},{"id":"3177","weight":8},{"id":"643","weight":2},{"id":"3166","weight":12},{"id":"1187","weight":3},{"id":"449","weight":6},{"id":"377","weight":3},{"id":"424","weight":3},{"id":"3029","weight":3},{"id":"3151","weight":3},{"id":"229","weight":4},{"id":"2146","weight":6},{"id":"2638","weight":2},{"id":"2315","weight":7},{"id":"1423","weight":5},{"id":"1680","weight":6},{"id":"3208","weight":6},{"id":"370","weight":3},{"id":"1402","weight":3},{"id":"2299","weight":5},{"id":"2309","weight":4},{"id":"1258","weight":4},{"id":"2288","weight":5},{"id":"2340","weight":2},{"id":"2286","weight":2},{"id":"2038","weight":4},{"id":"752","weight":2},{"id":"1393","weight":8},{"id":"1714","weight":9},{"id":"3162","weight":2}],"meta":{"jsonClass":"Map$Map3","room":"The Cocatoo","date":"1360944900000","session":"1"},"cluster":{"jsonClass":"Map$EmptyMap$"}}
